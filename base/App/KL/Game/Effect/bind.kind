App.KL.Game.Effect.bind<A: Type, B: Type>(
  effect: App.KL.Game.Effect<A>
  next: A -> App.KL.Game.Effect<B>
): App.KL.Game.Effect<B>

  (center, targets, board)
  case effect(center, targets, board) as result_a {
    err: App.KL.Game.Effect.Result.err<B>
    new: case next(result_a.value)(result_a.center, targets, result_a.board) as result_b {
      err: App.KL.Game.Effect.Result.err<B>
      new:
        center     = result_b.center
        value      = result_b.value
        map        = result_b.board
        indicators = Hexagonal.Axial.Map.union!(result_a.indicators, result_b.indicators)
        ap_used    = result_a.ap_used + result_b.ap_used
        cemetery   = result_a.cemetery ++ result_b.cemetery
        App.KL.Game.Effect.Result.new<B>(value, center, map, indicators, ap_used, cemetery)
    }
  }
